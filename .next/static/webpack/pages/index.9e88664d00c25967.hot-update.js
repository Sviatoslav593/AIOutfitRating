"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/simpleAnalysis.js":
/*!*********************************!*\
  !*** ./utils/simpleAnalysis.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleOutfitAnalysis: function() { return /* binding */ simpleOutfitAnalysis; }\n/* harmony export */ });\n/**\n * Simple client-side analysis without external APIs\n */ /**\n * Simple pattern-based analysis of filename and basic image properties\n */ function simpleOutfitAnalysis(file, imageAnalysis) {\n    const filename = file.name.toLowerCase();\n    // Check filename for obvious non-outfit indicators\n    const nonOutfitKeywords = [\n        \"screenshot\",\n        \"screen\",\n        \"logo\",\n        \"icon\",\n        \"banner\",\n        \"header\",\n        \"desktop\",\n        \"wallpaper\",\n        \"background\",\n        \"document\",\n        \"pdf\",\n        \"chart\",\n        \"graph\",\n        \"diagram\",\n        \"map\",\n        \"qr\",\n        \"barcode\"\n    ];\n    const hasNonOutfitKeyword = nonOutfitKeywords.some((keyword)=>filename.includes(keyword));\n    // Check filename for outfit-related keywords\n    const outfitKeywords = [\n        \"selfie\",\n        \"photo\",\n        \"pic\",\n        \"outfit\",\n        \"look\",\n        \"style\",\n        \"fashion\",\n        \"mirror\",\n        \"ootd\",\n        \"dress\",\n        \"shirt\",\n        \"pants\",\n        \"jeans\"\n    ];\n    const hasOutfitKeyword = outfitKeywords.some((keyword)=>filename.includes(keyword));\n    // Combine filename analysis with basic image analysis\n    let confidence = 0.7; // Base confidence - більш оптимістично\n    let reasoning = \"basic_analysis\";\n    if (hasNonOutfitKeyword) {\n        confidence = 0.2; // Менш строго\n        reasoning = \"filename_suggests_non_outfit\";\n    } else if (hasOutfitKeyword) {\n        confidence = 0.9;\n        reasoning = \"filename_suggests_outfit\";\n    }\n    // Adjust based on image properties\n    if (imageAnalysis) {\n        const { aspectRatio, colorAnalysis, isLikelyScreenshot, isLikelyIcon } = imageAnalysis;\n        if (isLikelyScreenshot || isLikelyIcon) {\n            confidence = Math.min(confidence, 0.2);\n            reasoning = \"image_properties_suggest_non_outfit\";\n        } else if (aspectRatio > 0.5 && aspectRatio < 2 && colorAnalysis.variance > 1000) {\n            confidence = Math.max(confidence, 0.6);\n            if (reasoning === \"basic_analysis\") {\n                reasoning = \"image_properties_suggest_outfit\";\n            }\n        }\n    }\n    return {\n        isOutfit: confidence > 0.4,\n        confidence: confidence,\n        reasoning: reasoning,\n        source: \"simple_analysis\",\n        details: {\n            filename: filename,\n            hasOutfitKeyword: hasOutfitKeyword,\n            hasNonOutfitKeyword: hasNonOutfitKeyword\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9zaW1wbGVBbmFseXNpcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FFRDs7Q0FFQyxHQUNNLFNBQVNBLHFCQUFxQkMsSUFBSSxFQUFFQyxhQUFhO0lBQ3RELE1BQU1DLFdBQVdGLEtBQUtHLElBQUksQ0FBQ0MsV0FBVztJQUV0QyxtREFBbUQ7SUFDbkQsTUFBTUMsb0JBQW9CO1FBQ3hCO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDRDtJQUVELE1BQU1DLHNCQUFzQkQsa0JBQWtCRSxJQUFJLENBQUMsQ0FBQ0MsVUFDbEROLFNBQVNPLFFBQVEsQ0FBQ0Q7SUFHcEIsNkNBQTZDO0lBQzdDLE1BQU1FLGlCQUFpQjtRQUNyQjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUQsTUFBTUMsbUJBQW1CRCxlQUFlSCxJQUFJLENBQUMsQ0FBQ0MsVUFDNUNOLFNBQVNPLFFBQVEsQ0FBQ0Q7SUFHcEIsc0RBQXNEO0lBQ3RELElBQUlJLGFBQWEsS0FBSyx1Q0FBdUM7SUFDN0QsSUFBSUMsWUFBWTtJQUVoQixJQUFJUCxxQkFBcUI7UUFDdkJNLGFBQWEsS0FBSyxjQUFjO1FBQ2hDQyxZQUFZO0lBQ2QsT0FBTyxJQUFJRixrQkFBa0I7UUFDM0JDLGFBQWE7UUFDYkMsWUFBWTtJQUNkO0lBRUEsbUNBQW1DO0lBQ25DLElBQUlaLGVBQWU7UUFDakIsTUFBTSxFQUFFYSxXQUFXLEVBQUVDLGFBQWEsRUFBRUMsa0JBQWtCLEVBQUVDLFlBQVksRUFBRSxHQUNwRWhCO1FBRUYsSUFBSWUsc0JBQXNCQyxjQUFjO1lBQ3RDTCxhQUFhTSxLQUFLQyxHQUFHLENBQUNQLFlBQVk7WUFDbENDLFlBQVk7UUFDZCxPQUFPLElBQ0xDLGNBQWMsT0FDZEEsY0FBYyxLQUNkQyxjQUFjSyxRQUFRLEdBQUcsTUFDekI7WUFDQVIsYUFBYU0sS0FBS0csR0FBRyxDQUFDVCxZQUFZO1lBQ2xDLElBQUlDLGNBQWMsa0JBQWtCO2dCQUNsQ0EsWUFBWTtZQUNkO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTFMsVUFBVVYsYUFBYTtRQUN2QkEsWUFBWUE7UUFDWkMsV0FBV0E7UUFDWFUsUUFBUTtRQUNSQyxTQUFTO1lBQ1B0QixVQUFVQTtZQUNWUyxrQkFBa0JBO1lBQ2xCTCxxQkFBcUJBO1FBQ3ZCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi91dGlscy9zaW1wbGVBbmFseXNpcy5qcz8yYjkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2ltcGxlIGNsaWVudC1zaWRlIGFuYWx5c2lzIHdpdGhvdXQgZXh0ZXJuYWwgQVBJc1xuICovXG5cbi8qKlxuICogU2ltcGxlIHBhdHRlcm4tYmFzZWQgYW5hbHlzaXMgb2YgZmlsZW5hbWUgYW5kIGJhc2ljIGltYWdlIHByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpbXBsZU91dGZpdEFuYWx5c2lzKGZpbGUsIGltYWdlQW5hbHlzaXMpIHtcbiAgY29uc3QgZmlsZW5hbWUgPSBmaWxlLm5hbWUudG9Mb3dlckNhc2UoKTtcblxuICAvLyBDaGVjayBmaWxlbmFtZSBmb3Igb2J2aW91cyBub24tb3V0Zml0IGluZGljYXRvcnNcbiAgY29uc3Qgbm9uT3V0Zml0S2V5d29yZHMgPSBbXG4gICAgXCJzY3JlZW5zaG90XCIsXG4gICAgXCJzY3JlZW5cIixcbiAgICBcImxvZ29cIixcbiAgICBcImljb25cIixcbiAgICBcImJhbm5lclwiLFxuICAgIFwiaGVhZGVyXCIsXG4gICAgXCJkZXNrdG9wXCIsXG4gICAgXCJ3YWxscGFwZXJcIixcbiAgICBcImJhY2tncm91bmRcIixcbiAgICBcImRvY3VtZW50XCIsXG4gICAgXCJwZGZcIixcbiAgICBcImNoYXJ0XCIsXG4gICAgXCJncmFwaFwiLFxuICAgIFwiZGlhZ3JhbVwiLFxuICAgIFwibWFwXCIsXG4gICAgXCJxclwiLFxuICAgIFwiYmFyY29kZVwiLFxuICBdO1xuXG4gIGNvbnN0IGhhc05vbk91dGZpdEtleXdvcmQgPSBub25PdXRmaXRLZXl3b3Jkcy5zb21lKChrZXl3b3JkKSA9PlxuICAgIGZpbGVuYW1lLmluY2x1ZGVzKGtleXdvcmQpXG4gICk7XG5cbiAgLy8gQ2hlY2sgZmlsZW5hbWUgZm9yIG91dGZpdC1yZWxhdGVkIGtleXdvcmRzXG4gIGNvbnN0IG91dGZpdEtleXdvcmRzID0gW1xuICAgIFwic2VsZmllXCIsXG4gICAgXCJwaG90b1wiLFxuICAgIFwicGljXCIsXG4gICAgXCJvdXRmaXRcIixcbiAgICBcImxvb2tcIixcbiAgICBcInN0eWxlXCIsXG4gICAgXCJmYXNoaW9uXCIsXG4gICAgXCJtaXJyb3JcIixcbiAgICBcIm9vdGRcIixcbiAgICBcImRyZXNzXCIsXG4gICAgXCJzaGlydFwiLFxuICAgIFwicGFudHNcIixcbiAgICBcImplYW5zXCIsXG4gIF07XG5cbiAgY29uc3QgaGFzT3V0Zml0S2V5d29yZCA9IG91dGZpdEtleXdvcmRzLnNvbWUoKGtleXdvcmQpID0+XG4gICAgZmlsZW5hbWUuaW5jbHVkZXMoa2V5d29yZClcbiAgKTtcblxuICAvLyBDb21iaW5lIGZpbGVuYW1lIGFuYWx5c2lzIHdpdGggYmFzaWMgaW1hZ2UgYW5hbHlzaXNcbiAgbGV0IGNvbmZpZGVuY2UgPSAwLjc7IC8vIEJhc2UgY29uZmlkZW5jZSAtINCx0ZbQu9GM0Ygg0L7Qv9GC0LjQvNGW0YHRgtC40YfQvdC+XG4gIGxldCByZWFzb25pbmcgPSBcImJhc2ljX2FuYWx5c2lzXCI7XG5cbiAgaWYgKGhhc05vbk91dGZpdEtleXdvcmQpIHtcbiAgICBjb25maWRlbmNlID0gMC4yOyAvLyDQnNC10L3RiCDRgdGC0YDQvtCz0L5cbiAgICByZWFzb25pbmcgPSBcImZpbGVuYW1lX3N1Z2dlc3RzX25vbl9vdXRmaXRcIjtcbiAgfSBlbHNlIGlmIChoYXNPdXRmaXRLZXl3b3JkKSB7XG4gICAgY29uZmlkZW5jZSA9IDAuOTtcbiAgICByZWFzb25pbmcgPSBcImZpbGVuYW1lX3N1Z2dlc3RzX291dGZpdFwiO1xuICB9XG5cbiAgLy8gQWRqdXN0IGJhc2VkIG9uIGltYWdlIHByb3BlcnRpZXNcbiAgaWYgKGltYWdlQW5hbHlzaXMpIHtcbiAgICBjb25zdCB7IGFzcGVjdFJhdGlvLCBjb2xvckFuYWx5c2lzLCBpc0xpa2VseVNjcmVlbnNob3QsIGlzTGlrZWx5SWNvbiB9ID1cbiAgICAgIGltYWdlQW5hbHlzaXM7XG5cbiAgICBpZiAoaXNMaWtlbHlTY3JlZW5zaG90IHx8IGlzTGlrZWx5SWNvbikge1xuICAgICAgY29uZmlkZW5jZSA9IE1hdGgubWluKGNvbmZpZGVuY2UsIDAuMik7XG4gICAgICByZWFzb25pbmcgPSBcImltYWdlX3Byb3BlcnRpZXNfc3VnZ2VzdF9ub25fb3V0Zml0XCI7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIGFzcGVjdFJhdGlvID4gMC41ICYmXG4gICAgICBhc3BlY3RSYXRpbyA8IDIgJiZcbiAgICAgIGNvbG9yQW5hbHlzaXMudmFyaWFuY2UgPiAxMDAwXG4gICAgKSB7XG4gICAgICBjb25maWRlbmNlID0gTWF0aC5tYXgoY29uZmlkZW5jZSwgMC42KTtcbiAgICAgIGlmIChyZWFzb25pbmcgPT09IFwiYmFzaWNfYW5hbHlzaXNcIikge1xuICAgICAgICByZWFzb25pbmcgPSBcImltYWdlX3Byb3BlcnRpZXNfc3VnZ2VzdF9vdXRmaXRcIjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlzT3V0Zml0OiBjb25maWRlbmNlID4gMC40LFxuICAgIGNvbmZpZGVuY2U6IGNvbmZpZGVuY2UsXG4gICAgcmVhc29uaW5nOiByZWFzb25pbmcsXG4gICAgc291cmNlOiBcInNpbXBsZV9hbmFseXNpc1wiLFxuICAgIGRldGFpbHM6IHtcbiAgICAgIGZpbGVuYW1lOiBmaWxlbmFtZSxcbiAgICAgIGhhc091dGZpdEtleXdvcmQ6IGhhc091dGZpdEtleXdvcmQsXG4gICAgICBoYXNOb25PdXRmaXRLZXl3b3JkOiBoYXNOb25PdXRmaXRLZXl3b3JkLFxuICAgIH0sXG4gIH07XG59XG4iXSwibmFtZXMiOlsic2ltcGxlT3V0Zml0QW5hbHlzaXMiLCJmaWxlIiwiaW1hZ2VBbmFseXNpcyIsImZpbGVuYW1lIiwibmFtZSIsInRvTG93ZXJDYXNlIiwibm9uT3V0Zml0S2V5d29yZHMiLCJoYXNOb25PdXRmaXRLZXl3b3JkIiwic29tZSIsImtleXdvcmQiLCJpbmNsdWRlcyIsIm91dGZpdEtleXdvcmRzIiwiaGFzT3V0Zml0S2V5d29yZCIsImNvbmZpZGVuY2UiLCJyZWFzb25pbmciLCJhc3BlY3RSYXRpbyIsImNvbG9yQW5hbHlzaXMiLCJpc0xpa2VseVNjcmVlbnNob3QiLCJpc0xpa2VseUljb24iLCJNYXRoIiwibWluIiwidmFyaWFuY2UiLCJtYXgiLCJpc091dGZpdCIsInNvdXJjZSIsImRldGFpbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/simpleAnalysis.js\n"));

/***/ })

});