"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/simpleAnalysis.js":
/*!*********************************!*\
  !*** ./utils/simpleAnalysis.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   simpleOutfitAnalysis: function() { return /* binding */ simpleOutfitAnalysis; }\n/* harmony export */ });\n/**\n * Simple client-side analysis without external APIs\n */ /**\n * Simple pattern-based analysis of filename and basic image properties\n */ function simpleOutfitAnalysis(file, imageAnalysis) {\n    const filename = file.name.toLowerCase();\n    // Check filename for obvious non-outfit indicators\n    const nonOutfitKeywords = [\n        \"screenshot\",\n        \"screen\",\n        \"logo\",\n        \"icon\",\n        \"banner\",\n        \"header\",\n        \"desktop\",\n        \"wallpaper\",\n        \"background\",\n        \"document\",\n        \"pdf\",\n        \"chart\",\n        \"graph\",\n        \"diagram\",\n        \"map\",\n        \"qr\",\n        \"barcode\"\n    ];\n    const hasNonOutfitKeyword = nonOutfitKeywords.some((keyword)=>filename.includes(keyword));\n    // Check filename for outfit-related keywords\n    const outfitKeywords = [\n        \"selfie\",\n        \"photo\",\n        \"pic\",\n        \"outfit\",\n        \"look\",\n        \"style\",\n        \"fashion\",\n        \"mirror\",\n        \"ootd\",\n        \"dress\",\n        \"shirt\",\n        \"pants\",\n        \"jeans\"\n    ];\n    const hasOutfitKeyword = outfitKeywords.some((keyword)=>filename.includes(keyword));\n    // Combine filename analysis with basic image analysis\n    let confidence = 0.8; // Ще більш оптимістично\n    let reasoning = \"basic_analysis\";\n    if (hasNonOutfitKeyword) {\n        confidence = 0.1; // Тільки для дуже очевидних випадків\n        reasoning = \"filename_suggests_non_outfit\";\n    } else if (hasOutfitKeyword) {\n        confidence = 0.95;\n        reasoning = \"filename_suggests_outfit\";\n    }\n    // Adjust based on image properties\n    if (imageAnalysis) {\n        const { aspectRatio, colorAnalysis, isLikelyScreenshot, isLikelyIcon } = imageAnalysis;\n        if (isLikelyScreenshot || isLikelyIcon) {\n            confidence = Math.min(confidence, 0.3); // Менш строго\n            reasoning = \"image_properties_suggest_non_outfit\";\n        } else if (aspectRatio > 0.3 && // Більш широкий діапазон\n        aspectRatio < 3 && // Більш широкий діапазон\n        colorAnalysis && colorAnalysis.variance > 500 // Менший поріг\n        ) {\n            confidence = Math.max(confidence, 0.8); // Вища впевненість\n            if (reasoning === \"basic_analysis\") {\n                reasoning = \"image_properties_suggest_outfit\";\n            }\n        }\n        // Додатковий бонус для нормальних розмірів фото\n        if (imageAnalysis.width >= 300 && imageAnalysis.height >= 300) {\n            confidence = Math.max(confidence, 0.75);\n        }\n    }\n    return {\n        isOutfit: confidence > 0.3,\n        confidence: confidence,\n        reasoning: reasoning,\n        source: \"simple_analysis\",\n        details: {\n            filename: filename,\n            hasOutfitKeyword: hasOutfitKeyword,\n            hasNonOutfitKeyword: hasNonOutfitKeyword,\n            finalConfidence: confidence\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9zaW1wbGVBbmFseXNpcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FFRDs7Q0FFQyxHQUNNLFNBQVNBLHFCQUFxQkMsSUFBSSxFQUFFQyxhQUFhO0lBQ3RELE1BQU1DLFdBQVdGLEtBQUtHLElBQUksQ0FBQ0MsV0FBVztJQUV0QyxtREFBbUQ7SUFDbkQsTUFBTUMsb0JBQW9CO1FBQ3hCO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDRDtJQUVELE1BQU1DLHNCQUFzQkQsa0JBQWtCRSxJQUFJLENBQUMsQ0FBQ0MsVUFDbEROLFNBQVNPLFFBQVEsQ0FBQ0Q7SUFHcEIsNkNBQTZDO0lBQzdDLE1BQU1FLGlCQUFpQjtRQUNyQjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtLQUNEO0lBRUQsTUFBTUMsbUJBQW1CRCxlQUFlSCxJQUFJLENBQUMsQ0FBQ0MsVUFDNUNOLFNBQVNPLFFBQVEsQ0FBQ0Q7SUFHcEIsc0RBQXNEO0lBQ3RELElBQUlJLGFBQWEsS0FBSyx3QkFBd0I7SUFDOUMsSUFBSUMsWUFBWTtJQUVoQixJQUFJUCxxQkFBcUI7UUFDdkJNLGFBQWEsS0FBSyxxQ0FBcUM7UUFDdkRDLFlBQVk7SUFDZCxPQUFPLElBQUlGLGtCQUFrQjtRQUMzQkMsYUFBYTtRQUNiQyxZQUFZO0lBQ2Q7SUFFQSxtQ0FBbUM7SUFDbkMsSUFBSVosZUFBZTtRQUNqQixNQUFNLEVBQUVhLFdBQVcsRUFBRUMsYUFBYSxFQUFFQyxrQkFBa0IsRUFBRUMsWUFBWSxFQUFFLEdBQ3BFaEI7UUFFRixJQUFJZSxzQkFBc0JDLGNBQWM7WUFDdENMLGFBQWFNLEtBQUtDLEdBQUcsQ0FBQ1AsWUFBWSxNQUFNLGNBQWM7WUFDdERDLFlBQVk7UUFDZCxPQUFPLElBQ0xDLGNBQWMsT0FBTyx5QkFBeUI7UUFDOUNBLGNBQWMsS0FBSyx5QkFBeUI7UUFDNUNDLGlCQUNBQSxjQUFjSyxRQUFRLEdBQUcsSUFBSSxlQUFlO1VBQzVDO1lBQ0FSLGFBQWFNLEtBQUtHLEdBQUcsQ0FBQ1QsWUFBWSxNQUFNLG1CQUFtQjtZQUMzRCxJQUFJQyxjQUFjLGtCQUFrQjtnQkFDbENBLFlBQVk7WUFDZDtRQUNGO1FBRUEsZ0RBQWdEO1FBQ2hELElBQUlaLGNBQWNxQixLQUFLLElBQUksT0FBT3JCLGNBQWNzQixNQUFNLElBQUksS0FBSztZQUM3RFgsYUFBYU0sS0FBS0csR0FBRyxDQUFDVCxZQUFZO1FBQ3BDO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xZLFVBQVVaLGFBQWE7UUFDdkJBLFlBQVlBO1FBQ1pDLFdBQVdBO1FBQ1hZLFFBQVE7UUFDUkMsU0FBUztZQUNQeEIsVUFBVUE7WUFDVlMsa0JBQWtCQTtZQUNsQkwscUJBQXFCQTtZQUNyQnFCLGlCQUFpQmY7UUFDbkI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL3NpbXBsZUFuYWx5c2lzLmpzPzJiOTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTaW1wbGUgY2xpZW50LXNpZGUgYW5hbHlzaXMgd2l0aG91dCBleHRlcm5hbCBBUElzXG4gKi9cblxuLyoqXG4gKiBTaW1wbGUgcGF0dGVybi1iYXNlZCBhbmFseXNpcyBvZiBmaWxlbmFtZSBhbmQgYmFzaWMgaW1hZ2UgcHJvcGVydGllc1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2ltcGxlT3V0Zml0QW5hbHlzaXMoZmlsZSwgaW1hZ2VBbmFseXNpcykge1xuICBjb25zdCBmaWxlbmFtZSA9IGZpbGUubmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gIC8vIENoZWNrIGZpbGVuYW1lIGZvciBvYnZpb3VzIG5vbi1vdXRmaXQgaW5kaWNhdG9yc1xuICBjb25zdCBub25PdXRmaXRLZXl3b3JkcyA9IFtcbiAgICBcInNjcmVlbnNob3RcIixcbiAgICBcInNjcmVlblwiLFxuICAgIFwibG9nb1wiLFxuICAgIFwiaWNvblwiLFxuICAgIFwiYmFubmVyXCIsXG4gICAgXCJoZWFkZXJcIixcbiAgICBcImRlc2t0b3BcIixcbiAgICBcIndhbGxwYXBlclwiLFxuICAgIFwiYmFja2dyb3VuZFwiLFxuICAgIFwiZG9jdW1lbnRcIixcbiAgICBcInBkZlwiLFxuICAgIFwiY2hhcnRcIixcbiAgICBcImdyYXBoXCIsXG4gICAgXCJkaWFncmFtXCIsXG4gICAgXCJtYXBcIixcbiAgICBcInFyXCIsXG4gICAgXCJiYXJjb2RlXCIsXG4gIF07XG5cbiAgY29uc3QgaGFzTm9uT3V0Zml0S2V5d29yZCA9IG5vbk91dGZpdEtleXdvcmRzLnNvbWUoKGtleXdvcmQpID0+XG4gICAgZmlsZW5hbWUuaW5jbHVkZXMoa2V5d29yZClcbiAgKTtcblxuICAvLyBDaGVjayBmaWxlbmFtZSBmb3Igb3V0Zml0LXJlbGF0ZWQga2V5d29yZHNcbiAgY29uc3Qgb3V0Zml0S2V5d29yZHMgPSBbXG4gICAgXCJzZWxmaWVcIixcbiAgICBcInBob3RvXCIsXG4gICAgXCJwaWNcIixcbiAgICBcIm91dGZpdFwiLFxuICAgIFwibG9va1wiLFxuICAgIFwic3R5bGVcIixcbiAgICBcImZhc2hpb25cIixcbiAgICBcIm1pcnJvclwiLFxuICAgIFwib290ZFwiLFxuICAgIFwiZHJlc3NcIixcbiAgICBcInNoaXJ0XCIsXG4gICAgXCJwYW50c1wiLFxuICAgIFwiamVhbnNcIixcbiAgXTtcblxuICBjb25zdCBoYXNPdXRmaXRLZXl3b3JkID0gb3V0Zml0S2V5d29yZHMuc29tZSgoa2V5d29yZCkgPT5cbiAgICBmaWxlbmFtZS5pbmNsdWRlcyhrZXl3b3JkKVxuICApO1xuXG4gIC8vIENvbWJpbmUgZmlsZW5hbWUgYW5hbHlzaXMgd2l0aCBiYXNpYyBpbWFnZSBhbmFseXNpc1xuICBsZXQgY29uZmlkZW5jZSA9IDAuODsgLy8g0KnQtSDQsdGW0LvRjNGIINC+0L/RgtC40LzRltGB0YLQuNGH0L3QvlxuICBsZXQgcmVhc29uaW5nID0gXCJiYXNpY19hbmFseXNpc1wiO1xuXG4gIGlmIChoYXNOb25PdXRmaXRLZXl3b3JkKSB7XG4gICAgY29uZmlkZW5jZSA9IDAuMTsgLy8g0KLRltC70YzQutC4INC00LvRjyDQtNGD0LbQtSDQvtGH0LXQstC40LTQvdC40YUg0LLQuNC/0LDQtNC60ZbQslxuICAgIHJlYXNvbmluZyA9IFwiZmlsZW5hbWVfc3VnZ2VzdHNfbm9uX291dGZpdFwiO1xuICB9IGVsc2UgaWYgKGhhc091dGZpdEtleXdvcmQpIHtcbiAgICBjb25maWRlbmNlID0gMC45NTtcbiAgICByZWFzb25pbmcgPSBcImZpbGVuYW1lX3N1Z2dlc3RzX291dGZpdFwiO1xuICB9XG5cbiAgLy8gQWRqdXN0IGJhc2VkIG9uIGltYWdlIHByb3BlcnRpZXNcbiAgaWYgKGltYWdlQW5hbHlzaXMpIHtcbiAgICBjb25zdCB7IGFzcGVjdFJhdGlvLCBjb2xvckFuYWx5c2lzLCBpc0xpa2VseVNjcmVlbnNob3QsIGlzTGlrZWx5SWNvbiB9ID1cbiAgICAgIGltYWdlQW5hbHlzaXM7XG5cbiAgICBpZiAoaXNMaWtlbHlTY3JlZW5zaG90IHx8IGlzTGlrZWx5SWNvbikge1xuICAgICAgY29uZmlkZW5jZSA9IE1hdGgubWluKGNvbmZpZGVuY2UsIDAuMyk7IC8vINCc0LXQvdGIINGB0YLRgNC+0LPQvlxuICAgICAgcmVhc29uaW5nID0gXCJpbWFnZV9wcm9wZXJ0aWVzX3N1Z2dlc3Rfbm9uX291dGZpdFwiO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBhc3BlY3RSYXRpbyA+IDAuMyAmJiAvLyDQkdGW0LvRjNGIINGI0LjRgNC+0LrQuNC5INC00ZbQsNC/0LDQt9C+0L1cbiAgICAgIGFzcGVjdFJhdGlvIDwgMyAmJiAvLyDQkdGW0LvRjNGIINGI0LjRgNC+0LrQuNC5INC00ZbQsNC/0LDQt9C+0L1cbiAgICAgIGNvbG9yQW5hbHlzaXMgJiZcbiAgICAgIGNvbG9yQW5hbHlzaXMudmFyaWFuY2UgPiA1MDAgLy8g0JzQtdC90YjQuNC5INC/0L7RgNGW0LNcbiAgICApIHtcbiAgICAgIGNvbmZpZGVuY2UgPSBNYXRoLm1heChjb25maWRlbmNlLCAwLjgpOyAvLyDQktC40YnQsCDQstC/0LXQstC90LXQvdGW0YHRgtGMXG4gICAgICBpZiAocmVhc29uaW5nID09PSBcImJhc2ljX2FuYWx5c2lzXCIpIHtcbiAgICAgICAgcmVhc29uaW5nID0gXCJpbWFnZV9wcm9wZXJ0aWVzX3N1Z2dlc3Rfb3V0Zml0XCI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8g0JTQvtC00LDRgtC60L7QstC40Lkg0LHQvtC90YPRgSDQtNC70Y8g0L3QvtGA0LzQsNC70YzQvdC40YUg0YDQvtC30LzRltGA0ZbQsiDRhNC+0YLQvlxuICAgIGlmIChpbWFnZUFuYWx5c2lzLndpZHRoID49IDMwMCAmJiBpbWFnZUFuYWx5c2lzLmhlaWdodCA+PSAzMDApIHtcbiAgICAgIGNvbmZpZGVuY2UgPSBNYXRoLm1heChjb25maWRlbmNlLCAwLjc1KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlzT3V0Zml0OiBjb25maWRlbmNlID4gMC4zLCAvLyDQndC40LbRh9C40Lkg0L/QvtGA0ZbQsyAtINCx0ZbQu9GM0Ygg0LTRgNGD0LbQvdGW0Lkg0LTQviDQsNGD0YLRhNGW0YLRltCyXG4gICAgY29uZmlkZW5jZTogY29uZmlkZW5jZSxcbiAgICByZWFzb25pbmc6IHJlYXNvbmluZyxcbiAgICBzb3VyY2U6IFwic2ltcGxlX2FuYWx5c2lzXCIsXG4gICAgZGV0YWlsczoge1xuICAgICAgZmlsZW5hbWU6IGZpbGVuYW1lLFxuICAgICAgaGFzT3V0Zml0S2V5d29yZDogaGFzT3V0Zml0S2V5d29yZCxcbiAgICAgIGhhc05vbk91dGZpdEtleXdvcmQ6IGhhc05vbk91dGZpdEtleXdvcmQsXG4gICAgICBmaW5hbENvbmZpZGVuY2U6IGNvbmZpZGVuY2UsXG4gICAgfSxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJzaW1wbGVPdXRmaXRBbmFseXNpcyIsImZpbGUiLCJpbWFnZUFuYWx5c2lzIiwiZmlsZW5hbWUiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJub25PdXRmaXRLZXl3b3JkcyIsImhhc05vbk91dGZpdEtleXdvcmQiLCJzb21lIiwia2V5d29yZCIsImluY2x1ZGVzIiwib3V0Zml0S2V5d29yZHMiLCJoYXNPdXRmaXRLZXl3b3JkIiwiY29uZmlkZW5jZSIsInJlYXNvbmluZyIsImFzcGVjdFJhdGlvIiwiY29sb3JBbmFseXNpcyIsImlzTGlrZWx5U2NyZWVuc2hvdCIsImlzTGlrZWx5SWNvbiIsIk1hdGgiLCJtaW4iLCJ2YXJpYW5jZSIsIm1heCIsIndpZHRoIiwiaGVpZ2h0IiwiaXNPdXRmaXQiLCJzb3VyY2UiLCJkZXRhaWxzIiwiZmluYWxDb25maWRlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./utils/simpleAnalysis.js\n"));

/***/ })

});