"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/imageValidation.js":
/*!**********************************!*\
  !*** ./utils/imageValidation.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeImageBasics: function() { return /* binding */ analyzeImageBasics; },\n/* harmony export */   isLikelyOutfit: function() { return /* binding */ isLikelyOutfit; }\n/* harmony export */ });\n/**\n * Basic image validation utilities for outfit detection\n */ /**\n * Analyze image dimensions and basic properties\n */ function analyzeImageBasics(file) {\n    return new Promise((resolve)=>{\n        const img = new Image();\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        img.onload = ()=>{\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0);\n            const imageData = ctx.getImageData(0, 0, img.width, img.height);\n            const analysis = {\n                width: img.width,\n                height: img.height,\n                aspectRatio: img.width / img.height,\n                colorAnalysis: analyzeColors(imageData),\n                isLikelyScreenshot: detectScreenshot(img.width, img.height),\n                isLikelyIcon: detectIcon(img.width, img.height)\n            };\n            resolve(analysis);\n        };\n        img.src = URL.createObjectURL(file);\n    });\n}\n/**\n * Detect if image is likely a screenshot\n */ function detectScreenshot(width, height) {\n    // Common screenshot dimensions\n    const commonScreenResolutions = [\n        {\n            w: 1920,\n            h: 1080\n        },\n        {\n            w: 1366,\n            h: 768\n        },\n        {\n            w: 1440,\n            h: 900\n        },\n        {\n            w: 1280,\n            h: 720\n        },\n        {\n            w: 1536,\n            h: 864\n        },\n        {\n            w: 1600,\n            h: 900\n        }\n    ];\n    return commonScreenResolutions.some((res)=>Math.abs(width - res.w) < 10 && Math.abs(height - res.h) < 10) || width > 1200 && height > 600 && Math.abs(width / height - 16 / 9) < 0.1;\n}\n/**\n * Detect if image is likely an icon or logo\n */ function detectIcon(width, height) {\n    // Very small images or perfect squares are likely icons\n    return width < 200 && height < 200 || Math.abs(width - height) < 10 && width < 500;\n}\n/**\n * Analyze color distribution\n */ function analyzeColors(imageData) {\n    const data = imageData.data;\n    let totalPixels = data.length / 4;\n    let colorVariance = 0;\n    let averageR = 0, averageG = 0, averageB = 0;\n    // Calculate average colors\n    for(let i = 0; i < data.length; i += 4){\n        averageR += data[i];\n        averageG += data[i + 1];\n        averageB += data[i + 2];\n    }\n    averageR /= totalPixels;\n    averageG /= totalPixels;\n    averageB /= totalPixels;\n    // Calculate color variance\n    for(let i = 0; i < data.length; i += 4){\n        const rDiff = data[i] - averageR;\n        const gDiff = data[i + 1] - averageG;\n        const bDiff = data[i + 2] - averageB;\n        colorVariance += rDiff * rDiff + gDiff * gDiff + bDiff * bDiff;\n    }\n    colorVariance /= totalPixels;\n    return {\n        variance: colorVariance,\n        isMonochrome: colorVariance < 1000,\n        averageColor: {\n            r: averageR,\n            g: averageG,\n            b: averageB\n        }\n    };\n}\n/**\n * Determine if image is likely an outfit photo\n */ function isLikelyOutfit(analysis) {\n    const { width, height, aspectRatio, colorAnalysis, isLikelyScreenshot, isLikelyIcon } = analysis;\n    // Definitely not outfit indicators\n    if (isLikelyScreenshot || isLikelyIcon) {\n        return {\n            isOutfit: false,\n            reason: isLikelyScreenshot ? \"screenshot\" : \"icon\"\n        };\n    }\n    // Very monochrome images are likely logos\n    if (colorAnalysis.isMonochrome) {\n        return {\n            isOutfit: false,\n            reason: \"monochrome\"\n        };\n    }\n    // Portrait orientation is more likely to be outfit photos\n    const isPortrait = aspectRatio < 0.8;\n    const isSquare = Math.abs(aspectRatio - 1) < 0.2;\n    // Good indicators for outfit photos (більш м'які критерії)\n    const hasGoodDimensions = width >= 150 && height >= 150;\n    const hasColorVariety = colorAnalysis.variance > 1000; // Зменшили поріг\n    const hasReasonableAspectRatio = aspectRatio > 0.2 && aspectRatio < 5; // Розширили діапазон\n    if (hasGoodDimensions && hasColorVariety && hasReasonableAspectRatio) {\n        return {\n            isOutfit: true,\n            confidence: isPortrait ? 0.8 : 0.6\n        };\n    }\n    // Якщо не пройшли базові перевірки, але це не очевидно не-аутфіт, даємо шанс\n    if (hasGoodDimensions && hasReasonableAspectRatio) {\n        return {\n            isOutfit: true,\n            confidence: 0.4\n        }; // Низька впевненість, але не блокуємо\n    }\n    return {\n        isOutfit: false,\n        reason: \"low_confidence\"\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/imageValidation.js\n"));

/***/ })

});